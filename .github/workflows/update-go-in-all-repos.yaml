---
name: Update Go in all NSM repos
run-name: ${{ github.actor }} has started updating Go version in all NSM repos
on:
  pull_request:
    types: [closed]
    branches:
      - main
jobs:
  print-debug-info:
    name: Print debug info for Release workflow
    runs-on: ubuntu-latest
    steps:
      - uses: hmarr/debug-action@v2

  # fetch-repositories:
  #   name: Fetch organization repositories
  #   runs-on: ubuntu-latest
  #   if: ${{ github.event.pull_request.merged == true && contains(github.event.pull_request.head.ref, 'update/go_') }}
  #   outputs:
  #     repositories: ${{ steps.organization-repositories.outputs.repositories }}
  #   steps:
  #     - name: Run `get-organization-repositories`
  #       id: organization-repositories
  #       uses: denis-tingajkin/get-organization-repositories@v1.0.1
  #       with:
  #         github-organization: 'NikitaSkrynnik'

  update-all-repos:
    runs-on: ubuntu-latest
    # needs: fetch-repositories
    strategy:
      matrix:
        repository: ["NikitaSkrynnik/sdk", "NikitaSkrynnik/cmd-forwarder-ovs"]
    steps:
      - name: Get a new Go version
        id: get-go-version
        run: |
            NEW_GO_VERSION=$(echo "${{ github.event.pull_request.head.ref }}" | grep -o "[0-9]\+.[0-9]\+.[0-9]\+")
            NEW_GO_MAJOR_VERSION=${NEW_GO_VERSION%.*}

            echo "New go version $NEW_GO_VERSION"
            echo "New go major version $NEW_GO_MAJOR_VERSION"

            echo "new-go-version=${NEW_GO_VERSION}" >> "$GITHUB_OUTPUT"
            echo "new-go-major-version=${NEW_GO_MAJOR_VERSION}" >> "$GITHUB_OUTPUT"

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          repository: ${{ matrix.repository }}
          token: ${{ secrets.NSM_BOT_GITHUB_TOKEN }}

      - name: Update Go version to ${{ steps.get-go-version.outputs.new-go-version }}
        run: |
          new_go_version=${{ steps.get-go-version.outputs.new-go-version }}
          new_go_major_version=${{ steps.get-go-version.outputs.new-go-major-version }}

          # Update Go version in all workflows
          find .github/workflows -name '*.yaml' -exec sed -i -e "s/go-version\: [0-9]\+\.[0-9]\+\.[0-9]\+/go-version:\ $new_go_version/g" {} +;

          # Update Go version in go.mod
          sed -i -e "s/go\ [0-9]\+\.[0-9]\+/go $new_go_major_version/g" go.mod

          # Update Go version in Dockerfile if it exists
          if [ -f "Dockerfile" ]; then
            sed -i -e "s/golang\:[0-9]\+\.[0-9]\+.[0-9]\+/golang:$new_go_version/g" Dockerfile
          fi
          go mod tidy

          git diff

      - name: Create & push commit
        run: |
          find . -type d
          git diff
          git status
          branch=${{ github.event.pull_request.head.ref }}
          git config --global user.email "nikita.skrynnik@xored.com"
          git config --global user.name "NikitaSkrynnik"
          git checkout -b $branch
          git status
          git commit -s -a -m "Update Go version to ${{ steps.get-go-version.outputs.new-go-version }}"
          git push
